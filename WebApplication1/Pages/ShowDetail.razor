@page "/tv/show-detail/{Id:int}"
@inject HttpClient Http
@inject IJSRuntime JsRuntime;

<h1>Show detail @Id</h1>

<div>
    <pre>
        @FormattedJson
    </pre>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    string FormattedJson = "";

    protected override async Task OnInitializedAsync()
    {
        var jsonString = await Http.GetStringAsync("http://api.tvmaze.com/shows/" + Id);

        Console.WriteLine("I am printing from C Sharp - invoking javascript now");

        FormattedJson = await JsRuntime.InvokeAsync<string>("prettyJson", jsonString);
       
        //How to tell a component that state has changed and to re-render itself.
        //StateHasChanged();
    }
}

